{"version":3,"sources":["components/Header/index.js","utils/helpers.js","components/Nav/index.js","components/Contact/index.js","components/Footer/index.js","App.js","reportWebVitals.js","index.js"],"names":["Header","props","className","capitalizeFirstLetter","string","charAt","toUpperCase","slice","Nav","pages","setCurrentPage","currentPage","contactSelected","setContactSelected","useEffect","document","title","name","href","onClick","map","page","Contact","useState","email","message","formState","setFormState","errorMessage","setErrorMessage","handleChange","e","target","isValid","test","String","toLowerCase","validateEmail","value","console","log","length","id","onSubmit","preventDefault","htmlFor","type","defaultValue","onBlur","rows","Footer","link","icon","rel","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.8a768c9e.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nfunction Header(props) {\r\n\r\n  return (\r\n    <header className=\"flex-row space-between px-1\">\r\n      <h1>NEDA PARVINI</h1>\r\n      {/* <img src={coverImage} alt=''></img>\r\n      {props.children} */}\r\n    </header>\r\n  )\r\n}\r\n\r\nexport default Header;","export function capitalizeFirstLetter(string) {\r\n  return string.charAt(0).toUpperCase() + string.slice(1);\r\n}\r\n\r\nexport function validateEmail(email) {\r\n  var re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n  return re.test(String(email).toLowerCase());\r\n}\r\n\r\nexport function removeHyphensAndCapitalize(string) {\r\n  return string.replace(/-/g, ' ').replace(/(^\\w|\\s\\w)/g, m => m.toUpperCase())\r\n}","import React, { useEffect } from 'react';\r\nimport { capitalizeFirstLetter } from '../../utils/helpers';\r\n\r\n\r\nfunction Nav(props) {\r\n\r\n  const {\r\n    pages = [],\r\n    setCurrentPage,\r\n    currentPage,\r\n    contactSelected,\r\n    setContactSelected,\r\n  } = props;\r\n\r\n  useEffect(() => {\r\n    document.title = capitalizeFirstLetter(currentPage.name);\r\n  }, [currentPage]);\r\n\r\n  return (\r\n    <header className=\"flex-row px-1\">\r\n      <h2>\r\n        <a data-testid=\"link\" href=\"/\">\r\n          {/* <span role=\"img\" aria-label=\"camera\"> ðŸ“¸</span> Oh Snap! */}\r\n        </a>\r\n      </h2>\r\n      <nav>\r\n        <ul className=\"flex-row\">\r\n          <li className=\"mx-2\">\r\n            <a data-testid=\"about\" href=\"About\" onClick={() => setContactSelected(false)}>\r\n              About me\r\n            </a>\r\n          </li>\r\n          <li className=\"mx-2\">\r\n            <a data-testid=\"portfolio\" href=\"Portfolio\" onClick={() => setContactSelected(false)}>\r\n              Portfolio\r\n            </a>\r\n          </li>\r\n          <li className=\"mx-2\">\r\n            <a data-testid=\"contact\" href=\"Contact\" onClick={() => setContactSelected(false)}>\r\n              Contact\r\n            </a>\r\n          </li>\r\n          <li className=\"mx-2\">\r\n            <a data-testid=\"resume\" href=\"Resume\" onClick={() => setContactSelected(false)}>\r\n              Resume\r\n            </a>\r\n          </li>\r\n          {/* <li className={`mx-2 ${contactSelected && 'navActive'}`}>\r\n\r\n            <span onClick={() => setContactSelected(true)}>Contact</span>\r\n          </li> */}\r\n          {pages.map((page) => (\r\n            <li\r\n              className={`mx-1 ${\r\n                currentPage.name === page.name && !contactSelected && 'navActive'\r\n                }`}\r\n              key={page.name}\r\n            >\r\n              <span\r\n                onClick={() => {\r\n                  setCurrentPage(page);\r\n                  setContactSelected(false);\r\n                }}\r\n              >\r\n                {capitalizeFirstLetter(page.name)}\r\n              </span>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </nav>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Nav;","import React, {useState }from 'react';\r\nimport { validateEmail } from '../../utils/helpers';\r\n\r\nfunction Contact() {\r\n  const [formState, setFormState] = useState({ name: '', email: '', message: '' });\r\n\r\n  const { name, email, message } = formState;\r\n\r\n  const [errorMessage, setErrorMessage] = useState('');\r\n\r\n  function handleChange(e) {\r\n    if (e.target.name === 'email') {\r\n      const isValid = validateEmail(e.target.value);\r\n      console.log(isValid);\r\n      if (!isValid) {\r\n        setErrorMessage('Please enter a valid email address');\r\n      } else { \r\n        setErrorMessage('');\r\n      }      \r\n    } else {\r\n      if (!e.target.value.length) {\r\n        setErrorMessage(`${e.target.name} is required.`);\r\n      } else {\r\n        setErrorMessage('');\r\n      }\r\n    }\r\n    if (!errorMessage) {\r\n      setFormState({ ...formState, [e.target.name]: e.target.value })\r\n    }    \r\n  }\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    console.log(formState);\r\n  }\r\n  \r\n  return (\r\n    <section>      \r\n      <form id=\"contact-form\" onSubmit={handleSubmit}>        \r\n        <div>\r\n          <label htmlFor=\"name\">Name:</label>\r\n          <input type=\"text\" name=\"name\" defaultValue={name} onBlur={handleChange} />\r\n        </div>\r\n        <div>\r\n          <label htmlFor=\"email\">Email address:</label>\r\n          <input type=\"email\" name=\"email\" defaultValue={email} onBlur={handleChange} />\r\n        </div>\r\n        <div>\r\n          <label htmlFor=\"message\">Message:</label>\r\n          <textarea name=\"message\" rows=\"5\" defaultValue={message} onBlur={handleChange} />          \r\n        </div>\r\n        {errorMessage && (\r\n          <div>\r\n            <p className=\"error-text\">{errorMessage}</p>\r\n          </div>\r\n        )}\r\n        <button data-testid=\"button\" type=\"submit\">Submit</button>\r\n      </form>\r\n\r\n      <p>Email:<a href=\"mailto:nedaparvini1@gmail.com\">nedaparvini1@gmail.com</a></p>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default Contact;","import React from 'react';\r\n\r\nfunction Footer() {\r\n\r\n  // Replace links with social media profiles\r\n  const icons = [\r\n    {\r\n      name: \"fab fa-github\",\r\n      link: \"https://github.com/NedaParvini\"\r\n    },\r\n    {\r\n      name: \"fab fa-linkedin\",\r\n      link: \"https://www.linkedin.com/in/neda-parvini-846356a8\"\r\n    },\r\n    {\r\n      name: \"fab fa-instagram\",\r\n      link: \"https://www.instagram.com/nedaparvini/?hl=en\"\r\n    }\r\n  ]\r\n\r\n  return (\r\n    <footer className=\"flex-row px-1\">\r\n      {icons.map(icon =>\r\n      (\r\n        <a href={icon.link} key={icon.name} target=\"_blank\" rel=\"noopener noreferrer\"><i className={icon.name}></i></a>\r\n      )\r\n        )}\r\n    </footer>\r\n  );\r\n}\r\n\r\nexport default Footer;","import React, { useState } from 'react';\r\nimport Header from './components/Header';\r\nimport Nav from './components/Nav';\r\n// import About from './components/About';\r\n// import ProjectCard from './components/ProjectCard';\r\nimport ContactForm from './components/Contact';\r\n// import Resume from './components/Resume';\r\nimport Footer from './components/Footer';\r\n// import Link from './components/Link';\r\n// import Content from './components/Content';\r\n\r\nfunction App() {\r\n  const [pages] = useState([\r\n    \r\n    { name: 'About'},\r\n    { name: 'Portfolio'},\r\n    { name: 'Contact'},\r\n    { name: 'Resume'}\r\n  ]);\r\n\r\n  const [currentPage, setCurrentPage] = useState(pages[0]);\r\n\r\n  const [contactSelected, setContactSelected] = useState(false);\r\n\r\n  return (\r\n    <div>\r\n      <Header>\r\n      <Nav\r\n        pages={pages}\r\n        setCurrentPage={setCurrentPage}\r\n        currentPage={currentPage}\r\n        contactSelected={contactSelected}\r\n        setContactSelected={setContactSelected}\r\n      ></Nav>\r\n      </Header>\r\n      <main>\r\n      {!contactSelected ? (\r\n          <>\r\n      <Nav currentPage={currentPage}></Nav>\r\n      \r\n            \r\n          </>\r\n        ) : (\r\n          <ContactForm></ContactForm>    \r\n        )}\r\n         \r\n        \r\n      </main>\r\n     \r\n      \r\n      <Footer></Footer>\r\n      \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}